{"version":3,"sources":["components/card/card.jsx","components/card-list/card-list.jsx","components/search/search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","Search","placeholder","handle","type","onChange","App","state","searchField","fetch","then","response","json","body","setState","this","filtered","filter","toLowerCase","includes","toLocaleLowerCase","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iTAIaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,0BAAoEC,IAAI,UAChF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,YCFbC,EAAW,SAAAR,GACpB,OAAO,qBAAKC,UAAU,YAAf,SACND,EAAMS,SAASC,KAAK,SAAAP,GAAO,OAC5B,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,UCLZO,G,MAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAcC,EAAhB,EAAgBA,OAAhB,OAClB,8BACI,uBACIZ,UAAU,SACVa,KAAO,SACPF,YAAeA,EACfG,SAAYF,QCmCTG,E,kDAtCb,aAAc,IAAD,8BACX,gBAEKC,MAAQ,CACXR,SAAU,GACVS,YAAc,IALL,E,qDASb,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAI,OAAI,EAAKC,SAAS,CAACf,SAAUc,S,oBAKzC,WAAS,IAAD,OAEN,EAAmCE,KAAKR,MAAhCR,EAAR,EAAQA,SAAWS,EAAnB,EAAmBA,YACbQ,EAAWjB,EAASkB,QAAO,SAAAxB,GAAO,OACtCA,EAAQG,KAAKsB,cAAcC,SAASX,EAAYY,wBAGlD,OACE,sBAAK7B,UAAY,MAAjB,UACE,0CACA,cAAC,EAAD,CACEW,YAAc,SACdC,OAAU,SAAAkB,GAAC,OAAI,EAAKP,SAAS,CAACN,YAAaa,EAAEC,OAAOC,WAEtD,cAAC,EAAD,CAAUxB,SAAYiB,W,GAjCZQ,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d1969aff.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './card.css'\r\n\r\nexport const Card = props => (\r\n    <div className = 'card-container'>\r\n        <img src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} alt=\"image\" />\r\n        <h2>{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport './card-list.css'\r\n\r\nimport { Card } from '../card/card.jsx'\r\n\r\nexport const CardList = props => {\r\n    return <div className=\"card-list\">\r\n    {props.monsters.map( monster => \r\n    <Card key = {monster.id} monster = {monster} />)}\r\n    </div>\r\n}","import React from 'react'\r\n\r\nimport './search.css'\r\n\r\nexport const Search = ({placeholder , handle}) =>(\r\n    <div>\r\n        <input \r\n            className=\"search\"\r\n            type = 'search'\r\n            placeholder = {placeholder}\r\n            onChange = {handle}\r\n        />\r\n    </div>\r\n)","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.jsx';\nimport {Search} from './components/search/search.jsx'\n\nclass App extends Component {\n\n  constructor(){\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(body => this.setState({monsters: body}))\n\n  }\n\n \n  render(){\n\n    const { monsters , searchField } = this.state\n    const filtered = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    )\n\n    return(\n      <div className = \"App\">\n        <h1>Monsters</h1>\n        <Search\n          placeholder = 'search'\n          handle = {e => this.setState({searchField: e.target.value})}\n        />\n        <CardList monsters = {filtered}/>\n      </div>\n      \n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}